name: 'Deploy'

on:
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./src/PollyUniverse

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore Voting Function
        run: dotnet restore PollyUniverse.Func.Voting/PollyUniverse.Func.Voting.csproj

      - name: Build Voting Function
        run: dotnet build PollyUniverse.Func.Voting/PollyUniverse.Func.Voting.csproj --configuration Release --no-restore

      - name: Publish Voting Function
        run: dotnet publish PollyUniverse.Func.Voting/PollyUniverse.Func.Voting.csproj --configuration Release --output ./publish-voting

      - name: Upload Voting Function Artifact
        uses: actions/upload-artifact@v4
        with:
          name: voting-lambda
          path: ./src/PollyUniverse/publish-voting/
          retention-days: 1

      - name: Restore Scheduling Function
        run: dotnet restore PollyUniverse.Func.Scheduling/PollyUniverse.Func.Scheduling.csproj

      - name: Build Scheduling Function
        run: dotnet build PollyUniverse.Func.Scheduling/PollyUniverse.Func.Scheduling.csproj --configuration Release --no-restore

      - name: Publish Scheduling Function
        run: dotnet publish PollyUniverse.Func.Scheduling/PollyUniverse.Func.Scheduling.csproj --configuration Release --output ./publish-scheduling

      - name: Upload Scheduling Function Artifact
        uses: actions/upload-artifact@v4
        with:
          name: scheduling-lambda
          path: ./src/PollyUniverse/publish-scheduling/
          retention-days: 1

  plan:
    name: 'Terraform Plan'
    runs-on: ubuntu-latest
    needs: [build]

    defaults:
      run:
        working-directory: ./deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Voting Function Artifact
        uses: actions/download-artifact@v4
        with:
          name: voting-lambda
          path: ./voting-lambda

      - name: Download Scheduling Function Artifact
        uses: actions/download-artifact@v4
        with:
          name: scheduling-lambda
          path: ./scheduling-lambda

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '~1.13'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false

  apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: production
    needs: [plan]

    defaults:
      run:
        working-directory: ./deploy

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Voting Function Artifact
        uses: actions/download-artifact@v4
        with:
          name: voting-lambda
          path: ./voting-lambda

      - name: Download Scheduling Function Artifact
        uses: actions/download-artifact@v4
        with:
          name: scheduling-lambda
          path: ./scheduling-lambda

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '~1.13'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -input=false
